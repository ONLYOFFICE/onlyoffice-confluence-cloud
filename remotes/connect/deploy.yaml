## Preparatory steps for installation
## Creating a database and a user
## Before these steps, the DB host must be configured
##
---
apiVersion: batch/v1
kind: Job
metadata:
  name: init-db
spec:
  backoffLimit: 2
  template:
    spec:
      volumes:
        - name: init-db
          configMap:
            name: init-db
            defaultMode: 0755
      containers:
        - name: init-db
          image: postgres
          env:
          - name: DB_PWD
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: postgres-password
          envFrom:
          - secretRef:
              name: init-db
          volumeMounts:
          - name: init-db
            mountPath: /sql/init_db.sh
            subPath: init_db.sh
          command: ["/bin/sh", "-c"]
          args: ["/sql/init_db.sh"]
      restartPolicy: Never

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-db
data:
  init_db.sh: |-
    #!/bin/bash
    PGPASSWORD=$DB_PWD psql -U postgres -h ${CONFLUENCE_DB_HOST} << EOF
    create database ${CONFLUENCE_DB_NAME};
    CREATE USER ${DB_USER_NAME} WITH PASSWORD '${DB_USER_PWD}';
    GRANT ALL PRIVILEGES ON DATABASE "${CONFLUENCE_DB_NAME}" to ${DB_USER_NAME};
    EOF

---
apiVersion: v1
kind: Secret
metadata:
  name: init-db
type: Opaque
stringData:
  CONFLUENCE_DB_HOST: postgresql
  CONFLUENCE_DB_NAME: confluencecloud
  DB_USER_NAME: confluencecloud
  DB_USER_PWD: confluence_secret_password

## Deploying the connector
##
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onlyoffice-confluence-cloud
  labels:
    app: onlyoffice-confluence-cloud
spec:
  replicas: 2
  selector:
    matchLabels:
      app: onlyoffice-confluence-cloud
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: onlyoffice-confluence-cloud
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - onlyoffice-confluence-cloud
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - name: onlyoffice-confluence-cloud
        image: onlyoffice/confluence-cloud:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        ports:
        - containerPort: 3000
          name: http
        envFrom:
        - configMapRef:
            name: confluence-cloud-env
        volumeMounts:
        - name: confluence-cloud-config
          mountPath: /usr/src/app/config.json
          subPath: config.json
      volumes:
      - name: confluence-cloud-config
        configMap:
          name: confluence-cloud-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluence-cloud-config
data:
  config.json: |-
    {
        "development": {
            "port": "$PORT",
            "errorTemplate": true,
            "store": {
                "adapter": "sequelize",
                "dialect": "sqlite3",
                "logging": false,
                "type": "memory"
            },
        },
        "production": {
            "port": "$PORT",
            "errorTemplate": true,
            "localBaseUrl": "$AC_LOCAL_BASE_URL",
            "store": {
                "adapter": "sequelize",
                "type": "postgres",
                "url": "$DATABASE_URL"
            },
            "whitelist": [
                "*.jira-dev.com",
                "*.atlassian.net",
                "*.atlassian.com",
                "*.jira.com"
            ]
        },
        "product": "confluence",
        "docServer": {
            "default": {
                "adress": "https://docserver-example.com/",
                "secret": "secret",
                "authorizationHeader": "Authorization"
            }
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: confluence-cloud-env
data:
  AC_OPTS: no-reg
  NODE_ENV: production
  AC_LOCAL_BASE_URL: https://onlyoffice-confluence-cloud.example.com
  DATABASE_URL: postgres://user:password@postgresql:5432/db_name

---
apiVersion: v1
kind: Service
metadata:
  name: onlyoffice-confluence-cloud
spec:
  ports:
  - port: 3000
    name: http
    targetPort: 3000
  selector:
    app: onlyoffice-confluence-cloud
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: onlyoffice-confluence-cloud
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
spec:
  rules:
  - host: onlyoffice-confluence-cloud.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: onlyoffice-confluence-cloud
            port:
              number: 3000
